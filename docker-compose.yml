# file: docker-compose.yml

services:
  postgres_db:
    image: postgres:15-alpine
    container_name: my_telegram_bot_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
      POSTGRES_DB: ${DB_NAME:-telegram_bot_db}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis_db:
    image: redis:7-alpine
    container_name: my_telegram_bot_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  bot:
    build: .
    container_name: my_telegram_bot_app
    depends_on:
      - postgres_db
      - redis_db
    env_file:
      - .env
    volumes:
      - .:/app
    # --- КЛЮЧЕВОЕ ИЗМЕНЕНИЕ ЗДЕСЬ ---
    # Мы меняем команду запуска. Теперь контейнер при старте сначала
    # выполняет команду `alembic upgrade head`, которая обновляет базу данных,
    # и ТОЛЬКО ПОСЛЕ УСПЕШНОГО ОБНОВЛЕНИЯ запускает бота (`python main.py`).
    # Это гарантирует, что бот никогда не запустится с устаревшей структурой БД.
    command: sh -c "alembic upgrade head && python main.py"
    # ---------------------------------

volumes:
  postgres_data: