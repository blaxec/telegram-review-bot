# file: docker-compose.yml

services:
  postgres_db:
    image: postgres:15-alpine
    container_name: my_telegram_bot_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
      POSTGRES_DB: ${DB_NAME:-telegram_bot_db}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-telegram_bot_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - telegram_bot_net

  redis_db:
    image: redis:7-alpine
    container_name: my_telegram_bot_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - telegram_bot_net

  bot:
    build: .
    container_name: my_telegram_bot_app
    depends_on:
      postgres_db:
        condition: service_healthy
    # --- ИЗМЕНЕНИЕ ЗДЕСЬ ---
    # Убираем env_file и передаем переменные напрямую для теста
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_ID_1=${ADMIN_ID_1}
      - ADMIN_ID_2=${ADMIN_ID_2}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_URL=${REDIS_URL}
      - WITHDRAWAL_CHANNEL_ID=${WITHDRAWAL_CHANNEL_ID}
      - TESTER_IDS=${TESTER_IDS}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GOOGLE_API_KEY_1=${GOOGLE_API_KEY_1}
      - GOOGLE_API_KEY_2=${GOOGLE_API_KEY_2}
      - GROQ_MODEL_NAME=${GROQ_MODEL_NAME}
    # -----------------------
    volumes:
      - .:/app
    command: >
      sh -c "alembic upgrade head && python main.py"
    networks:
      - telegram_bot_net

volumes:
  postgres_data:

networks:
  telegram_bot_net:
    driver: bridge