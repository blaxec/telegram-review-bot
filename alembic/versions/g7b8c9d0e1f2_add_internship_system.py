# file: alembic/versions/g7b8c9d0e1f2_add_internship_system.py

"""add internship system

Revision ID: g7b8c9d0e1f2
Revises: a0b1c2d3e4f5
Create Date: 2025-09-21 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'g7b8c9d0e1f2'
down_revision: Union[str, None] = 'a0b1c2d3e4f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns to users table
    op.add_column('users', sa.Column('is_intern', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('users', sa.Column('is_busy_intern', sa.Boolean(), nullable=False, server_default=sa.text('false')))

    # Определяем типы ENUM для использования в таблицах.
    # Alembic автоматически создаст их при создании таблиц.
    internship_app_status_enum = sa.Enum('pending', 'approved', 'rejected', 'archived_success', name='internship_app_status_enum')
    internship_task_status_enum = sa.Enum('active', 'completed', 'fired', name='internship_task_status_enum')

    # Create internship_applications table
    op.create_table('internship_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('age', sa.String(), nullable=False),
    sa.Column('hours_per_day', sa.String(), nullable=False),
    sa.Column('platforms', sa.String(), nullable=False),
    sa.Column('status', internship_app_status_enum, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )

    # Create internship_tasks table
    op.create_table('internship_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('intern_id', sa.BigInteger(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.Column('goal_count', sa.Integer(), nullable=False),
    sa.Column('current_progress', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('estimated_salary', sa.Float(), nullable=True),
    sa.Column('status', internship_task_status_enum, nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('last_task_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['intern_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # Create internship_mistakes table
    op.create_table('internship_mistakes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('intern_task_id', sa.Integer(), nullable=False),
    sa.Column('intern_id', sa.BigInteger(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('penalty_amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['intern_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['intern_task_id'], ['internship_tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('internship_mistakes')
    op.drop_table('internship_tasks')
    op.drop_table('internship_applications')
    op.drop_column('users', 'is_busy_intern')
    op.drop_column('users', 'is_intern')
    
    # Alembic автоматически удалит ENUM типы, когда будут удалены использующие их таблицы.
    sa.Enum(name='internship_task_status_enum').drop(op.get_bind(), checkfirst=True)
    sa.Enum(name='internship_app_status_enum').drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###