"""create task_subscriptions table

Revision ID: l3m4n5o6p7q8
Revises: m9n0o1p2q3r4
Create Date: 2025-10-10 13:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'l3m4n5o6p7q8'
down_revision: Union[str, None] = 'm9n0o1p2q3r4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # --- ИСПРАВЛЕНИЕ ЗДЕСЬ ---
    # Мы больше не создаем Enum здесь. Мы просто ссылаемся на него по имени.
    # Alembic/SQLAlchemy поймет, что нужно использовать уже существующий тип.
    gender_enum = sa.Enum('any', 'male', 'female', name='gender_enum', create_type=False)
    # -------------------------

    op.create_table('task_subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('gender', gender_enum, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'platform', 'gender')
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_subscriptions')
    # При откате этой миграции мы НЕ удаляем тип `gender_enum`,
    # потому что он мог быть создан другой миграцией и все еще используется.
    # Его удаление прописано в той миграции, которая его создает (f1e2d3c4b5a6).
    # ### end Alembic commands ###