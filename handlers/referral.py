# file: handlers/referral.py

import logging
from aiogram import Router, F, Bot
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.exceptions import TelegramBadRequest

from states.user_states import UserState
from keyboards import inline
from database import db_manager
from config import Rewards

router = Router()
logger = logging.getLogger(__name__)

async def show_selected_referral_path(message_or_callback: Message | CallbackQuery, bot: Bot):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º –ø—É—Ç–∏."""
    user_id = message_or_callback.from_user.id
    user = await db_manager.get_user(user_id)
    bot_info = await bot.get_me()
    referral_link = f"https://t.me/{bot_info.username}?start={user_id}"
    referral_earnings = await db_manager.get_referral_earnings(user_id)

    path_description = ""
    if user.referral_path == 'google':
        path_description = f"–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>{Rewards.REFERRAL_GOOGLE_REVIEW} ‚≠ê</b> –∑–∞ –∫–∞–∂–¥—ã–π –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ Google –ö–∞—Ä—Ç–∞—Ö."
    elif user.referral_path == 'gmail':
        path_description = f"–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>{Rewards.REFERRAL_GMAIL_ACCOUNT} ‚≠ê</b> –∑–∞ –∫–∞–∂–¥—ã–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∏ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π Gmail –∞–∫–∫–∞—É–Ω—Ç –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞."
    elif user.referral_path == 'yandex':
        if user.referral_subpath == 'with_text':
            path_description = f"–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>{Rewards.REFERRAL_YANDEX_WITH_TEXT} ‚≠ê</b> –∑–∞ –∫–∞–∂–¥—ã–π –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö (—Å —Ç–µ–∫—Å—Ç–æ–º)."
        else:
            path_description = f"–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>{Rewards.REFERRAL_YANDEX_WITHOUT_TEXT} ‚≠ê</b> –∑–∞ –∫–∞–∂–¥—ã–π –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –≤–∞—à–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)."

    ref_text = (
        f"üöÄ <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b><br><br>"
        f"<b>–í–∞—à –≤—ã–±–æ—Ä:</b> {path_description}<br><br>"
        f"üîó <b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:</b><br>"
        f"<code>{referral_link}</code><br>"
        f"(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –≤—ã—à–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë)<br><br>"
        f"üí∞ –ù–∞–∫–æ–ø–ª–µ–Ω–æ –≤ –∫–æ–ø–∏–ª–∫–µ: <b>{referral_earnings:.2f} ‚≠ê</b>"
    )

    is_message = isinstance(message_or_callback, Message)
    target_message = message_or_callback if is_message else message_or_callback.message

    if not target_message:
        return

    try:
        if is_message:
             await target_message.answer(
                ref_text,
                reply_markup=inline.get_referral_info_keyboard(),
                disable_web_page_preview=True
            )
        else:
            await target_message.edit_text(
                ref_text,
                reply_markup=inline.get_referral_info_keyboard(),
                disable_web_page_preview=True
            )
    except TelegramBadRequest as e:
        if "message is not modified" not in str(e):
            logger.warning(f"Error editing referral message: {e}")
        if not is_message:
            await message_or_callback.answer()


@router.callback_query(F.data == 'profile_referral')
async def referral_entry_point(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–¥–µ–ª–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–æ—Ä.
    """
    user = await db_manager.get_user(callback.from_user.id)
    if user and user.referral_path:
        await show_selected_referral_path(callback, bot)
    else:
        await show_referral_path_selection(callback, state)

@router.callback_query(F.data == 'profile_referrals_list')
async def show_referrals_list(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤."""
    referrals = await db_manager.get_referrals(callback.from_user.id)
    
    if not referrals:
        text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
    else:
        text = "üë• <b>–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:</b><br><br>" + "<br>".join([f"- @{username}" for username in referrals if username])
        
    if callback.message:
        await callback.message.edit_text(text, reply_markup=inline.get_back_to_referral_menu_keyboard())
    await callback.answer()

@router.callback_query(F.data == 'profile_claim_referral_stars')
async def claim_referral_stars(callback: CallbackQuery, bot: Bot):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –∑–≤–µ–∑–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å."""
    user_id = callback.from_user.id
    earnings = await db_manager.get_referral_earnings(user_id)
    
    if earnings > 0:
        await db_manager.claim_referral_earnings(user_id)
        await callback.answer(f"{earnings:.2f} ‚≠ê –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å!", show_alert=True)
    else:
        await callback.answer("–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∫–æ–ø–∏–ª–∫–∞ –ø—É—Å—Ç–∞.", show_alert=True)
        
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    await show_selected_referral_path(callback, bot)


async def show_referral_path_selection(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –ø—É—Ç–∏."""
    await state.set_state(UserState.REFERRAL_PATH_SELECTION)
    selection_text = (
        "ü§ù <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É!</b><br><br>"
        "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–≤–µ–∑–¥—ã —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π. "
        "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥!<br><br>"
        "‚ùóÔ∏è<b>–í–ù–ò–ú–ê–ù–ò–ï:</b> –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—É—Ç—å —Ç–æ–ª—å–∫–æ <b>–æ–¥–∏–Ω —Ä–∞–∑</b>. –ò–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ."
    )
    if callback.message:
        await callback.message.edit_text(selection_text, reply_markup=inline.get_referral_path_selection_keyboard())

@router.callback_query(F.data == 'ref_path:yandex', UserState.REFERRAL_PATH_SELECTION)
async def select_yandex_subpath(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥-–º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ø–Ω–¥–µ–∫—Å.–û—Ç–∑—ã–≤–æ–≤."""
    await state.set_state(UserState.REFERRAL_YANDEX_SUBPATH_SELECTION)
    text = (
        "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—É—Ç—å '–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã'.<br><br>"
        "–¢–µ–ø–µ—Ä—å —É—Ç–æ—á–Ω–∏—Ç–µ, –∑–∞ –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ –æ—Ç–∑—ã–≤—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É:"
    )
    if callback.message:
        await callback.message.edit_text(text, reply_markup=inline.get_yandex_subpath_selection_keyboard())

@router.callback_query(F.data == 'back_to_ref_path_selection', UserState.REFERRAL_YANDEX_SUBPATH_SELECTION)
async def back_to_main_selection(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—É—Ç–∏."""
    await show_referral_path_selection(callback, state)


@router.callback_query(F.data.startswith('confirm_ref_path:'), StateFilter(UserState.REFERRAL_PATH_SELECTION, UserState.REFERRAL_YANDEX_SUBPATH_SELECTION))
async def confirm_referral_path(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    await callback.answer("–í–∞—à –≤—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    
    parts = callback.data.split(':')
    path = parts[1]
    subpath = parts[2] if len(parts) > 2 else None

    success = await db_manager.set_user_referral_path(callback.from_user.id, path, subpath)

    if not success:
        await callback.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä —Ä–∞–Ω–µ–µ.")
        return

    await state.clear()
    await state.set_state(UserState.MAIN_MENU)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ –Ω–æ–≤–æ–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
    await show_selected_referral_path(callback, bot)