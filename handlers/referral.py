# file: handlers/referral.py

import logging
from aiogram import Router, F, Bot
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.exceptions import TelegramBadRequest

from states.user_states import UserState
from keyboards import inline
from database import db_manager
from config import Rewards

router = Router()
logger = logging.getLogger(__name__)

async def show_selected_referral_path(message_or_callback: Message | CallbackQuery, bot: Bot):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ."""
    user_id = message_or_callback.from_user.id
    bot_info = await bot.get_me()
    referral_link = f"https://t.me/{bot_info.username}?start={user_id}"
    referral_earnings = await db_manager.get_referral_earnings(user_id)

    path_description = f"–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ **{Rewards.REFERRAL_REWARD_PERCENT}%** –æ—Ç —Å—É–º–º—ã –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –∫–∞–∂–¥—ã–π —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –Ω–∞ Google –∏ –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç–∞—Ö –≤–∞—à–∏–º–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏."

    ref_text = (
        f"üöÄ **–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞**\n\n"
        f"{path_description}\n\n"
        f"üîó **–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:**\n"
        f"<code>{referral_link}</code>\n"
        f"(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –≤—ã—à–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë)\n\n"
        f"üí∞ –ù–∞–∫–æ–ø–ª–µ–Ω–æ –≤ –∫–æ–ø–∏–ª–∫–µ: **{referral_earnings:.2f} ‚≠ê**"
    )

    is_message = isinstance(message_or_callback, Message)
    target_message = message_or_callback if is_message else message_or_callback.message

    if not target_message:
        return

    try:
        if is_message:
             await target_message.answer(
                ref_text,
                reply_markup=inline.get_referral_info_keyboard(),
                disable_web_page_preview=True
            )
        else:
            await target_message.edit_text(
                ref_text,
                reply_markup=inline.get_referral_info_keyboard(),
                disable_web_page_preview=True
            )
    except TelegramBadRequest as e:
        if "message is not modified" not in str(e):
            logger.warning(f"Error editing referral message: {e}")
        if not is_message:
            await message_or_callback.answer()


@router.callback_query(F.data == 'profile_referral')
async def referral_entry_point(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É."""
    await show_selected_referral_path(callback, bot)

@router.callback_query(F.data == 'profile_referrals_list')
async def show_referrals_list(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤."""
    referrals = await db_manager.get_referrals(callback.from_user.id)
    
    if not referrals:
        text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
    else:
        text = "üë• **–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:**\n\n" + "\n".join([f"- @{username}" for username in referrals if username])
        
    if callback.message:
        await callback.message.edit_text(text, reply_markup=inline.get_back_to_referral_menu_keyboard())
    await callback.answer()

@router.callback_query(F.data == 'profile_claim_referral_stars')
async def claim_referral_stars(callback: CallbackQuery, bot: Bot):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –∑–≤–µ–∑–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å."""
    user_id = callback.from_user.id
    earnings = await db_manager.get_referral_earnings(user_id)
    
    if earnings > 0:
        await db_manager.claim_referral_earnings(user_id)
        await callback.answer(f"{earnings:.2f} ‚≠ê –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å!", show_alert=True)
    else:
        await callback.answer("–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∫–æ–ø–∏–ª–∫–∞ –ø—É—Å—Ç–∞.", show_alert=True)
        
    await show_selected_referral_path(callback, bot)