
# file: logic/notification_logic.py

import logging
from aiogram import Bot
from database import db_manager

logger = logging.getLogger(__name__)

async def notify_subscribers(platform: str, gender: str, bot: Bot):
    """
    –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø –∑–∞–¥–∞–Ω–∏–π –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∏—Ö.
    """
    try:
        subscribers = await db_manager.find_subscribers(platform, gender)
        if not subscribers:
            return

        gender_map = {'male': '–º—É–∂—Å–∫–∏—Ö', 'female': '–∂–µ–Ω—Å–∫–∏—Ö', 'any': '–ª—é–±—ã—Ö'}
        platform_map = {'google_maps': 'Google', 'yandex_with_text': 'Yandex (—Å —Ç–µ–∫—Å—Ç–æ–º)', 'yandex_without_text': 'Yandex (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞)'}
        
        gender_text = gender_map.get(gender, '–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö')
        platform_text = platform_map.get(platform, platform)

        message_text = (
            f"üéâ –ü–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è **{gender_text}** –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ **{platform_text}**, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–ª–∏—Å—å! "
            "–ó–∞—Ö–æ–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ó–∞—Ä–∞–±–æ—Ç–æ–∫', —á—Ç–æ–±—ã –≤–∑—è—Ç—å –∑–∞–¥–∞–Ω–∏–µ."
        )

        user_ids_to_notify = [sub.user_id for sub in subscribers]

        for user_id in user_ids_to_notify:
            try:
                await bot.send_message(user_id, message_text)
            except Exception as e:
                logger.warning(f"Failed to send task notification to subscriber {user_id}: {e}")
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ—Å–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        await db_manager.delete_subscriptions(user_ids_to_notify, platform, gender)
        logger.info(f"Notified and unsubscribed {len(user_ids_to_notify)} users for {platform}/{gender} tasks.")

    except Exception as e:
        logger.exception(f"An error occurred in notify_subscribers for {platform}/{gender}: {e}")